BUILDOUT_FILENAME ?= buildout.cfg

CACHE_VOLUME ?= buildout-cache

DOCKER_IMAGE ?= python:2.7
DOCKER_RUN_ARGS = --rm -v $(CACHE_VOLUME):/cache -v /build -w /build \
                  $(DOCKER_RUN_ARGS_EXTRA) $(DOCKER_IMAGE)
DOCKER_RUN_ARGS_EXTRA ?=

IMAGE_NAME_DOCS ?= docker.kopla.jyu.fi/docs/docs-flow
IMAGE_TAG_DOCS ?= $(CI_BUILD_REF_NAME)
TOWER_APP_NAME_DOCS ?= docs-flow

CI_BUILD_REF_NAME ?= $(shell git describe --tags --exact-match 2>/dev/null || git name-rev --name-only HEAD | sed 's"[/:]"_"g')

make = git archive HEAD | docker run -i $(DOCKER_RUN_ARGS) \
       bash -c "tar x --warning=all && make ZSERVER_HOST=\`hostname -i\` \
       PYBOT_ARGS='-v REMOTE_URL:http://selenium:4444/wd/hub -v ZOPE_HOST:\`hostname -i\`' \
       BUILDOUT_ARGS='-c $(BUILDOUT_FILENAME) -N' $1"

.PHONY: all
all: build check

.PHONY: show
show:
	$(INIT_CACHE)
	$(call make,show)

.PHONY: build
build:
	$(INIT_CACHE)
	$(call make,build)

.PHONY: test
test: DOCKER_RUN_ARGS_EXTRA = --volumes-from=$(BUILD) --link=$(SELENIUM):selenium
test:
	$(INIT_CACHE)
	$(call make,test); \
	  status=$$?; \
	  docker ps -a; \
	  docker cp $(BUILD):/build/parts/test .; \
	  docker rm -f -v $(SELENIUM); \
	  docker rm -f -v $(BUILD); \
	  exit $$status

.PHONY: docs
docs: DOCKER_RUN_ARGS_EXTRA = --volumes-from=$(BUILD) --link=$(SELENIUM):selenium
docs:
	$(INIT_CACHE)
	$(call make,docs); \
	  status=$$?; \
	  docker ps -a; \
	  docker cp $(BUILD):/build/html .; \
	  docker rm -f -v $(SELENIUM); \
	  docker rm -f -v $(BUILD); \
	  exit $$status

.PHONY: check
check: test

.PHONY: dist
dist:
	$(INIT_CACHE)
	$(call make,dist)

.PHONY: dist-docs
dist-docs:
	docker build --rm --no-cache \
		-t $(IMAGE_NAME_DOCS):$(IMAGE_TAG_DOCS) \
		-f Dockerfile.docs .

.PHONY: push-docs
push-docs:
	docker push $(IMAGE_NAME_DOCS):$(IMAGE_TAG_DOCS)

.PHONY: deploy
deploy:
	$(INIT_CACHE)
	$(call make,deploy)

.PHONY: deploy-docs
deploy-docs:
ifndef TOWER_JOB_ID_DOCS
	$(error Missing TOWER_JOB_ID_DOCS)
endif
	tower-cli job launch --monitor \
		--job-template=$(TOWER_JOB_ID_DOCS) \
		--extra-vars="limit_app: $(TOWER_APP_NAME_DOCS)"

.PHONY: html
html: docs

###

INIT_CACHE = \
  docker volume ls | grep $(CACHE_VOLUME) \
    || (docker create --name $(CACHE_VOLUME) -v $(CACHE_VOLUME):/cache $(DOCKER_IMAGE) \
        && docker run --rm -v $(CACHE_VOLUME):/cache $(DOCKER_IMAGE) mkdir /cache/extends-cache)

# http://cakoose.com/wiki/gnu_make_thunks
SELENIUM_GEN = $(shell docker run -d selenium/standalone-firefox:2.53.0)
SELENIUM = $(eval SELENIUM := $(SELENIUM_GEN))$(SELENIUM)

BUILD_GEN = $(shell docker create -v /build $(DOCKER_IMAGE))
BUILD = $(eval BUILD := $(BUILD_GEN))$(BUILD)
